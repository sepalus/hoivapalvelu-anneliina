@import "../variables";

@mixin alignServiceBlockContent() {
  @media only screen and (min-width: $width-m) {
    &.content-block-direction-default {
      .content-block-image-wrapper {
        left: (-$padding-outer-horizontal-m);
      }
      .content-block-information {
        > * {
          padding-left: 50%;
        }
      }
    }
    &.content-block-direction-reverse {
      .content-block-image-wrapper {
        right: (-$padding-outer-horizontal-m);
      }
      .content-block-information > * {
        padding-right: 50%;
      }
    }
  }

  @media only screen and (min-width: $width-l) {
    &.content-block-direction-default {
      .content-block-image-wrapper {
        left: (-$padding-outer-horizontal-l);
      }
    }
    &.content-block-direction-reverse {
      .content-block-image-wrapper {
        right: (-$padding-outer-horizontal-l);
      }
    }
  }

  @media only screen and (min-width: $width-xl) {
    &.content-block-direction-default {
      .content-block-image-wrapper {
        left: (-$padding-outer-horizontal-xl);
      }
    }
    &.content-block-direction-reverse {
      .content-block-image-wrapper {
        right: (-$padding-outer-horizontal-xl);
      }
    }
  }
}

.service-content-block {
  @media only screen and (min-width: $width-m) {
    .content-block-image-wrapper {
      position: absolute;
      height: 100%;
      @include setInnerPaddings(false, false, "m");
    }
    .content-block-image {
      position: static;
    }

    .content-block-information {
      width: 100%;
      padding: 0px;
      @include setGap();
    }

    .content-block-information-header {
      @include setInnerPaddings("m", false);
    }

    .content-block-information-content {
      @include setInnerPaddings(false, "m");
      padding-top: 16px !important;
    }

    @include alignServiceBlockContent();
  }
}
